$default-color: color(primary, dark);
$approved-color: color(primary, vivid);
$provisional-color: color(accent-warm, dark);

& {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    margin-bottom: 1em;

    // Maintain a 5:3 aspect ratio on this element
    & {
        box-sizing: border-box;
        position: relative;
        padding-top: 60%;  // (3 / 5)
        & > * {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            width: 100%;
            height: 100%;
        }
    }

    // Style loading and error indicators
    & {
        // Center the indicators container
        .indicators {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
            i {
                opacity: .8;
            }
            .loading-indicator, .error-indicator {
                display: none;
            }
        }
        // Show loading-indicator when loading class is set on the component
        &.loading {
            .indicators {
                .loading-indicator {
                    display: block;
                    width: auto;
                    text-align: center;
                    color: color(primary, light);
                }
            }
        }
        // Show error-indicator when has-error class is set on the component
        &.has-error {
            .indicators {
                .error-indicator {
                    display: block;
                    width: auto;
                    text-align: center;
                    color: $error;
                }
            }
        }
    }

    // container for everything drawn by the graph component
    .graph-container {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        .chart-container {
            flex-grow: 1;
            display: flex;
            flex-direction: row;
            .y-label {
                flex-grow: 0;
                writing-mode: vertical-rl;
                transform: rotate(180deg);
                text-align: center;
                padding: 0 0 0 .5em;
            }
            svg {
                flex-grow: 1;
                width: 100%;
                g.chart {
                    path.line-segment {
                        fill: none;
                    }
                    .line-segment {
                        stroke-width: 2px;
                        &.approved {
                            stroke: $approved-color;
                        }
                        &.provisional {
                            stroke: $provisional-color;
                        }
                    }
                    .overlay {
                        fill: none;
                        pointer-events: all;
                        cursor: crosshair;
                    }
                    circle.focus {
                        fill: #436BAF;
                        opacity: .6;
                    }
                    .focus {
                        line {
                            opacity: .5;
                            stroke: #436BAF;
                            stroke-width: 1px;
                            stroke-dasharray: 5, 5
                        }
                    }
                }
            }
            .tooltip {
                pointer-events: none;
                position: absolute;
                right: 0;
                background: rgba(255, 255, 255, 0.8);
                color: $default-color;
                .current-tooltip-text {
                    font-weight: bold;
                }
                .approved {
                    color: $approved-color;
                }
                .provisional {
                    color: $provisional-color;
                }
                .compare-tooltip-text {
                    font-weight: normal
                }
            }
        }
        .legend {
            flex-grow: 0;
            text-align: center;
            span {
                padding: 0 1em 0 .5em;
            }
            .line-segment {
                stroke-width: 2px;
                &.approved {
                    stroke: $approved-color;
                }
                &.provisional {
                    stroke: $provisional-color;
                }
            }
        }
    }
}
